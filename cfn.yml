Transform: AWS::Serverless-2016-10-31
Parameters:
  ServiceAccountSecret:
    Description: service account secret name
    Type: String
    Default: ""
  TargetFileId:
    Description: export target file id
    Type: String
    Default: ""
  RangeName:
    Description: export target sheet range
    Type: String
    Default: ""
  KmsArn:
    Description: kms key arn
    Type: String
    Default: ""
  SecretArn:
    Description: secretmanager secret arn
    Type: String
    Default: ""
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Secret Manager
        Parameters:
          - ServiceAccountSecret
          - KmsArn
          - SecretArn
Resources:
  Layer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.6
      Content:
        S3Bucket: your-bucket-name
        S3Key: your-key/your-layer.zip
      Description: googleapi lib for python
      LayerName: googleapi-layer
  LayerPermission:
    Type: "AWS::Lambda::LayerVersionPermission"
    Properties:
      Action: lambda:GetLayerVersion
      LayerVersionArn: !Ref Layer
      Principal: !Ref "AWS::AccountId"
  Function:
    Type: "AWS::Serverless::Function"
    Properties:
      Environment:
        Variables:
          SERVICE_ACCOUNT_SECRET: !Ref ServiceAccountSecret
          TARGET_FILE_ID: !Ref TargetFileId
          RANGE_NAME: !Ref RangeName
      Handler: lambda_function.lambda_sheet_handler
      Runtime: python3.6
      CodeUri: "s3://your-bucket-name/your-key/your-source.zip"
      Layers:
        - !Ref Layer
      Role: !GetAtt
        - HandlerExecRole
        - Arn
      Timeout: 10
      Events:
        HourlyEvent:
          Type: Schedule
          Properties:
            Schedule: rate(10 minutes)
  HandlerExecRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  KMSPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      Roles:
        - !Ref HandlerExecRole
      PolicyName: kms_permission
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "kms:Decrypt"
            Resource:
              - !Ref KmsArn
  SecretManagerPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      Roles:
        - !Ref HandlerExecRole
      PolicyName: secretmanager_permission
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Ref SecretArn
